{
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "identifier": "minecraft:player",
      "materials": {
        "default": "entity_alphatest",
        "cape": "entity_alphatest",
        "animated": "player_animated"
      },
      "textures": {
        "cape": "textures/entity/cape_invisible"
      },
      "geometry": {
        "default": "geometry.humanoid.custom",
        "cape": "geometry.cape"
      },
      "scripts": {
        "scale": "0.9375",
        "initialize": [
          "variable.is_holding_right = 0.0;",
          "variable.is_blinking = 0.0;",
          "variable.last_blink_time = 0.0;",
          "variable.hand_bob = 0.0;"
        ],
        "pre_animation": [
          "variable.helmet_layer_visible = 1.0;",
          "variable.leg_layer_visible = 1.0;",
          "variable.boot_layer_visible = 1.0;",
          "variable.chest_layer_visible = 1.0;",
          "variable.attack_body_rot_y = Math.sin(360*Math.sqrt(variable.attack_time)) * 5.0;",
          "variable.tcos0 = (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;",
          "variable.first_person_rotation_factor = math.sin((1 - variable.attack_time) * 180.0);",
          "variable.hand_bob = query.life_time < 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground && query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;",
          "variable.map_angle = math.clamp(1 - variable.player_x_rotation / 45.1, 0.0, 1.0);",
          "variable.item_use_normalized = query.main_hand_item_use_duration / query.main_hand_item_max_duration;",
        

          //custom variables
          "variable.expOriginal = query.player_level;",
          "variable.exp         = query.player_level;",
          "v.rotYOriginal = (Math.round(query.rider_head_y_rotation(0)*32/45) - 1);",
          "v.rotY         = (Math.round(query.rider_head_y_rotation(0)*32/45) - 1);",


          "v.max_pow = 8;",
          "v.is_animating          = (v.exp - (Math.pow(2,14)         -1) > 0) ? 1 : 0;",
					"v.is_animating_test     = (v.exp - (Math.pow(2,14)         -1) > 0) ? (v.exp = v.exp - Math.pow(2,14         )) : 0;",
          //skip 2^13
          
          "v.phantom_armor         = (v.rotY - 1 > 0) ? 1 : 0;",
					"v.operation             = (v.rotY - 1 > 0) ? (v.rotY = v.rotY - 2) : 0;",
          "v.in_creative           = (v.rotY     > 0) ? 1 : 0;",
					"v.operation             = (v.rotY     > 0) ? (v.rotY = v.rotY - 1) : 0;",

          "v.enderite_energy       = (v.exp - (Math.pow(2,v.max_pow-2)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-2)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-2)) : 0;",
					"v.enderite_upside_down  = (v.exp - (Math.pow(2,v.max_pow-3)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-3)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-3)) : 0;",
					"v.nothing               = (v.exp - (Math.pow(2,v.max_pow-4)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-4)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-4)) : 0;",
					"v.phantom_whip3         = (v.exp - (Math.pow(2,v.max_pow-5)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-5)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-5)) : 0;",
					"v.phantom_whip2         = (v.exp - (Math.pow(2,v.max_pow-6)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-6)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-6)) : 0;",
					"v.phantom_whip1         = (v.exp - (Math.pow(2,v.max_pow-7)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-7)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-7)) : 0;",
					"v.using_weapon          = (v.exp - (Math.pow(2,v.max_pow-8)-1) > 0) ? 1*v.is_animating : 0;",
					"v.operation             = (v.exp - (Math.pow(2,v.max_pow-8)-1) > 0) ? (v.exp = v.exp - Math.pow(2,v.max_pow-8)) : 0;",
          
          "variable.whip_animation = v.phantom_whip1*Math.pow(2,0) + v.phantom_whip2*Math.pow(2,1) + v.phantom_whip3*Math.pow(2,2);",

          "v.inv_has_arrow = 0;",
          "v.hbr_has_arrow = 0;",
          "v.i = 0;",
          "v.inv_check = loop(27, { v.inv_has_arrow = query.is_item_name_any('slot.inventory', v.i, 'minecraft:arrow'); v.i = v.i + 1; v.inv_has_arrow == 1 ? break; });",
          "v.i = 0;",
          "v.hotbar_check = loop(9, { v.hbr_has_arrow = query.is_item_name_any('slot.hotbar', v.i, 'minecraft:arrow'); v.i = v.i + 1; v.hbr_has_arrow == 1 ? break; });",
          "v.ofd_has_arrow = query.is_item_name_any('slot.weapon.offhand', 'minecraft:arrow');", //checks offhand
          "v.has_arrow = v.inv_has_arrow || v.hbr_has_arrow || v.ofd_has_arrow;",


          "variable.hammer       = query.is_item_name_any('slot.weapon.mainhand', 'yes:copper_hammer', 'yes:exposed_copper_hammer', 'yes:weathered_copper_hammer', 'yes:oxidized_copper_hammer', 'yes:waxed_copper_hammer', 'yes:waxed_exposed_copper_hammer', 'yes:waxed_weathered_copper_hammer', 'yes:waxed_oxidized_copper_hammer', 'yes:oxidized_copper_hammer_ad1', 'yes:oxidized_copper_hammer_ad2', 'yes:oxidized_copper_hammer_ad3', 'yes:waxed_oxidized_copper_hammer_ad1', 'yes:waxed_oxidized_copper_hammer_ad2', 'yes:waxed_oxidized_copper_hammer_ad3');",
          "variable.spear        = query.is_item_name_any('slot.weapon.mainhand', 'yes:amethyst_spear', 'yes:amethyst_spear_ad1', 'yes:amethyst_spear_ad2', 'yes:amethyst_spear_ad3');",
          "variable.battleaxe    = query.is_item_name_any('slot.weapon.mainhand', 'yes:glowing_obsidian_battleaxe', 'yes:glowing_obsidian_battleaxe_ad1', 'yes:glowing_obsidian_battleaxe_ad2', 'yes:glowing_obsidian_battleaxe_ad3');",
          "variable.whip         = query.is_item_name_any('slot.weapon.mainhand', 'yes:phantom_whip', 'yes:phantom_whip_ad1', 'yes:phantom_whip_ad2', 'yes:phantom_whip_ad3');",
          "variable.greatsword   = query.is_item_name_any('slot.weapon.mainhand', 'yes:emerald_greatsword', 'yes:emerald_greatsword_ad1', 'yes:emerald_greatsword_ad2', 'yes:emerald_greatsword_ad3', 'yes:aetherite_greatsword', 'yes:aetherite_greatsword_ad1', 'yes:aetherite_greatsword_ad2', 'yes:aetherite_greatsword_ad3');",
          "variable.echo_staff   = query.is_item_name_any('slot.weapon.mainhand', 'yes:echo_staff', 'yes:echo_staff_ad1', 'yes:echo_staff_ad2', 'yes:echo_staff_ad3');",
          "variable.nexus_bow    = query.is_item_name_any('slot.weapon.mainhand', 'yes:nexus_bow', 'yes:nexus_bow_ad1', 'yes:nexus_bow_ad2', 'yes:nexus_bow_ad3');",
          "variable.reaper_staff = query.is_item_name_any('slot.weapon.mainhand', 'yes:reaper_staff_0', 'yes:reaper_staff_1', 'yes:reaper_staff_2', 'yes:reaper_staff_3', 'yes:reaper_staff_4', 'yes:reaper_staff_5');",

          "variable.wearing_enderite_armor = query.is_item_name_any('slot.armor.head', 'yes:enderite_helmet') && query.is_item_name_any('slot.armor.chest', 'yes:enderite_chestplate') && query.is_item_name_any('slot.armor.legs', 'yes:enderite_leggings') && query.is_item_name_any('slot.armor.feet', 'yes:enderite_boots');"

        ],
        "animate": [
          "root",
          {
            "hammer_animation_controller": "v.hammer"
          },
          {
            "spear_animation_controller": "v.spear"
          },
          {
            "battleaxe_animation_controller": "v.battleaxe"
          },
          {
            "whip_animation_controller": "v.whip"
          },
          {
            "greatsword_animation_controller": "v.greatsword"
          },
          {
            "echo_staff_animation_controller": "v.echo_staff"
          },
          {
            "third_person_bow_equipped": "v.nexus_bow && q.is_using_item && (v.has_arrow || v.in_creative) && !v.is_first_person"
          }
        ]
      },
      "animations": {
        "root": "controller.animation.player.root",
        "base_controller": "controller.animation.player.base",
        "hudplayer": "controller.animation.player.hudplayer",
        "humanoid_base_pose": "animation.humanoid.base_pose",
        "look_at_target": "controller.animation.humanoid.look_at_target",
        "look_at_target_ui": "animation.player.look_at_target.ui",
        "look_at_target_default": "animation.humanoid.look_at_target.default",
        "look_at_target_gliding": "animation.humanoid.look_at_target.gliding",
        "look_at_target_swimming": "animation.humanoid.look_at_target.swimming",
        "look_at_target_inverted": "animation.player.look_at_target.inverted",
        "cape": "animation.player.cape",
        "move.arms": "animation.player.move.arms",
        "move.legs": "animation.player.move.legs",
        "swimming": "animation.player.swim",
        "swimming.legs": "animation.player.swim.legs",
        "riding.arms": "animation.player.riding.arms",
        "riding.legs": "animation.player.riding.legs",
        "holding": "animation.player.holding",
        "brandish_spear": "animation.humanoid.brandish_spear",
        "holding_spyglass": "animation.humanoid.holding_spyglass",
        "charging": "animation.humanoid.charging",
        "attack.positions": "animation.player.attack.positions",
        "attack.rotations": "animation.player.attack.rotations",
        "sneaking": "animation.player.sneaking",
        "bob": "animation.player.bob",
        "damage_nearby_mobs": "animation.humanoid.damage_nearby_mobs",
        "bow_and_arrow": "animation.humanoid.bow_and_arrow",
        "use_item_progress": "animation.humanoid.use_item_progress",
        "skeleton_attack": "animation.skeleton.attack",
        "sleeping": "animation.player.sleeping",
        "first_person_base_pose": "animation.player.first_person.base_pose",
        "first_person_empty_hand": "animation.player.first_person.empty_hand",
        "first_person_swap_item": "animation.player.first_person.swap_item",
        "first_person_shield_block": "animation.player.first_person.shield_block",
        "first_person_attack_controller": "controller.animation.player.first_person_attack",
        "first_person_attack_rotation": "animation.player.first_person.attack_rotation",
        "first_person_vr_attack_rotation": "animation.player.first_person.vr_attack_rotation",
        "first_person_walk": "animation.player.first_person.walk",
        "first_person_map_controller": "controller.animation.player.first_person_map",
        "first_person_map_hold": "animation.player.first_person.map_hold",
        "first_person_map_hold_attack": "animation.player.first_person.map_hold_attack",
        "first_person_map_hold_off_hand": "animation.player.first_person.map_hold_off_hand",
        "first_person_map_hold_main_hand": "animation.player.first_person.map_hold_main_hand",
        "first_person_crossbow_equipped": "animation.player.first_person.crossbow_equipped",
        "third_person_crossbow_equipped": "animation.player.crossbow_equipped",
        "third_person_bow_equipped": "animation.player.bow_equipped",
        "crossbow_hold": "animation.player.crossbow_hold",
        "crossbow_controller": "controller.animation.player.crossbow",
        "shield_block_main_hand": "animation.player.shield_block_main_hand",
        "shield_block_off_hand": "animation.player.shield_block_off_hand",
        "blink": "controller.animation.persona.blink",

        "first_person_normalize": "animation.first_person_normalize",
        "first_person_attack": "animation.first_person_attack",

        "hammer_first_person": "animation.hammer_first_person",
        "spear_first_person": "animation.spear_first_person",
        "battleaxe_first_person": "animation.battleaxe_first_person",
        "whip_first_person": "animation.whip_first_person",
        "greatsword_first_person": "animation.greatsword_first_person",
        "echo_staff_first_person": "animation.echo_staff_first_person",
        "reaper_staff_first_person": "animation.reaper_staff_first_person",

        
        //"spear_attack": "animation.player.stab2",
        //"battleaxe_attack": "animation.battleaxe_attack1",
        //"whip_attack": "animation.whip_first_person",
        //"greatsword_attack": "animation.greatsword_first_person",
        //"reaper_staff_attack": "animation.reaper_staff_first_person",

        "enderite_animation_test": "controller.animation.enderite_levitation_animation",
        "enderite_levitate": "animation.enderite_armor_float_jump",
        "enderite_levitate_back": "animation.enderite_armor_float_back",

        "hammer_animation_controller": "controller.animation.hammer",
        "spear_animation_controller": "controller.animation.spear",
        "battleaxe_animation_controller": "controller.animation.battleaxe",
        "whip_animation_controller": "controller.animation.whip",
        "greatsword_animation_controller": "controller.animation.greatsword",
        "echo_staff_animation_controller": "controller.animation.echo_staff"
        //"reaper_staff_animation_controller": "controller.animation.reaper_staff"
        
      },
      "render_controllers": [
        {
          "controller.render.player.first_person": "variable.is_first_person"
        },
        {
          "controller.render.player.third_person": "!variable.is_first_person && !variable.map_face_icon"
        },
        {
          "controller.render.player.map": "variable.map_face_icon"
        }
      ],
      "enable_attachables": true
    }
  }
}